/*
 * Copyright (C) 2021 badi_
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package com.mycompany.minesweeper;

import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.util.ArrayList;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 * This class creates a frame to display high scores. Scores from different difficulties can be viewed and the score file can be reset.
 *
 * @author Badi Moore
 */
public class HighScoreFrame extends javax.swing.JFrame {

    /**
     * Creates new form HighScoreFrame
     * 
     * @param scoreHandler the ScoreHandler object to fetch the scores from
     */
    public HighScoreFrame(ScoreHandler scoreHandler) {
        initComponents();

        this.scoreHandler = scoreHandler;
        getContentPane().setBackground(new java.awt.Color(250, 250, 250));

        // center the text in the score column for all score tables
        DefaultTableCellRenderer centerRend = new DefaultTableCellRenderer();
        centerRend.setHorizontalAlignment(JLabel.CENTER);
        jTableEasy.getColumnModel().getColumn(1).setCellRenderer(centerRend);
        jTableMedium.getColumnModel().getColumn(1).setCellRenderer(centerRend);
        jTableExpert.getColumnModel().getColumn(1).setCellRenderer(centerRend);
        
        readScores();
    }

    /**
     * Reads the scores from <code>scoreHandler</code> and inserts the values into the score tables
     */
    private void readScores() {
        // Empty out the old values by setting the row count to 0, than back to the max amount of scores
        DefaultTableModel dm = (DefaultTableModel) jTableEasy.getModel();
        dm.setRowCount(0);
        dm.setRowCount(MineConstants.MAXSCORES);
        dm = (DefaultTableModel) jTableMedium.getModel();
        dm.setRowCount(0);
        dm.setRowCount(MineConstants.MAXSCORES);
        dm = (DefaultTableModel) jTableExpert.getModel();
        dm.setRowCount(0);
        dm.setRowCount(MineConstants.MAXSCORES);

        // fetch scores for each difficulty level into and ArrayList
        // then iterate through list and add each name and score to correct table cell
        ArrayList<Score> scores = scoreHandler.getScores("easy").getScoreList();
        for (int i = 0; i < scores.size(); i++) {
            jTableEasy.getModel().setValueAt((getPosString(i + 1)) + scores.get(i).getName(), i, 0);
            jTableEasy.getModel().setValueAt(scores.get(i).getScore(), i, 1);
        }
        scores = scoreHandler.getScores("medium").getScoreList();
        for (int i = 0; i < scores.size(); i++) {
            jTableMedium.getModel().setValueAt((getPosString(i + 1)) + scores.get(i).getName(), i, 0);
            jTableMedium.getModel().setValueAt(scores.get(i).getScore(), i, 1);
        }
        scores = scoreHandler.getScores("expert").getScoreList();
        for (int i = 0; i < scores.size(); i++) {
            jTableExpert.getModel().setValueAt((getPosString(i + 1)) + scores.get(i).getName(), i, 0);
            jTableExpert.getModel().setValueAt(scores.get(i).getScore(), i, 1);
        }

        jTableEasy.validate();
    }

    /**
     * Generate prefix string for the name value in the score table.
     * The string should contain the score's placement and enough whitespace
     * to align the names with single digit placements with the names with double digit placements.
     * Thus the name "Badi" at first placement would show up as "1.  Badi" combined with the return value.
     * 
     * @param i the score's placement number
     * @return the prefix string for given placement
     */
    private String getPosString(int i) {
        String pos = String.valueOf(i);
        if (i < 10) {
            pos += ".   ";
        } else {
            pos += ". ";
        }
        return pos;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPaneScores = new javax.swing.JTabbedPane();
        jPanelEasy = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableEasy = new javax.swing.JTable();
        jPanelMedium = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTableMedium = new javax.swing.JTable();
        jPanelExpert = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTableExpert = new javax.swing.JTable();
        jButtonBack = new javax.swing.JButton();
        jButtonReset = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("High Scores");

        jTabbedPaneScores.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        jTableEasy.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jTableEasy.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Name", "Score (s)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableEasy.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTableEasy.setRowHeight(25);
        jTableEasy.setRowMargin(5);
        jTableEasy.setShowGrid(true);
        jTableEasy.setShowHorizontalLines(false);
        jTableEasy.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jTableEasy);
        if (jTableEasy.getColumnModel().getColumnCount() > 0) {
            jTableEasy.getColumnModel().getColumn(1).setMinWidth(100);
            jTableEasy.getColumnModel().getColumn(1).setPreferredWidth(100);
            jTableEasy.getColumnModel().getColumn(1).setMaxWidth(100);
        }

        javax.swing.GroupLayout jPanelEasyLayout = new javax.swing.GroupLayout(jPanelEasy);
        jPanelEasy.setLayout(jPanelEasyLayout);
        jPanelEasyLayout.setHorizontalGroup(
            jPanelEasyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelEasyLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 384, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelEasyLayout.setVerticalGroup(
            jPanelEasyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEasyLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPaneScores.addTab("Easy", jPanelEasy);

        jTableMedium.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jTableMedium.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Name", "Score (s)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableMedium.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTableMedium.setRowHeight(25);
        jTableMedium.setRowMargin(5);
        jTableMedium.setShowGrid(true);
        jTableMedium.setShowHorizontalLines(false);
        jTableMedium.getTableHeader().setReorderingAllowed(false);
        jScrollPane5.setViewportView(jTableMedium);
        if (jTableMedium.getColumnModel().getColumnCount() > 0) {
            jTableMedium.getColumnModel().getColumn(1).setMinWidth(100);
            jTableMedium.getColumnModel().getColumn(1).setPreferredWidth(100);
            jTableMedium.getColumnModel().getColumn(1).setMaxWidth(100);
        }

        javax.swing.GroupLayout jPanelMediumLayout = new javax.swing.GroupLayout(jPanelMedium);
        jPanelMedium.setLayout(jPanelMediumLayout);
        jPanelMediumLayout.setHorizontalGroup(
            jPanelMediumLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelMediumLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 384, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelMediumLayout.setVerticalGroup(
            jPanelMediumLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMediumLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPaneScores.addTab("Medium", jPanelMedium);

        jTableExpert.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jTableExpert.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Name", "Score (s)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableExpert.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTableExpert.setRowHeight(25);
        jTableExpert.setRowMargin(5);
        jTableExpert.setShowGrid(true);
        jTableExpert.setShowHorizontalLines(false);
        jTableExpert.getTableHeader().setReorderingAllowed(false);
        jScrollPane6.setViewportView(jTableExpert);
        if (jTableExpert.getColumnModel().getColumnCount() > 0) {
            jTableExpert.getColumnModel().getColumn(1).setMinWidth(100);
            jTableExpert.getColumnModel().getColumn(1).setPreferredWidth(100);
            jTableExpert.getColumnModel().getColumn(1).setMaxWidth(100);
        }

        javax.swing.GroupLayout jPanelExpertLayout = new javax.swing.GroupLayout(jPanelExpert);
        jPanelExpert.setLayout(jPanelExpertLayout);
        jPanelExpertLayout.setHorizontalGroup(
            jPanelExpertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelExpertLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 384, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelExpertLayout.setVerticalGroup(
            jPanelExpertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelExpertLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPaneScores.addTab("Expert", jPanelExpert);

        jButtonBack.setText("Back");
        jButtonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBackActionPerformed(evt);
            }
        });

        jButtonReset.setText("Reset scores");
        jButtonReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPaneScores)
            .addGroup(layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(jButtonBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonReset)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPaneScores, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonBack)
                    .addComponent(jButtonReset))
                .addGap(0, 9, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBackActionPerformed
        // close window
        WindowEvent winClosingEvent = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winClosingEvent);
    }//GEN-LAST:event_jButtonBackActionPerformed

    private void jButtonResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonResetActionPerformed
        // display confirmation dialog
        //if "yes" chosen, reset all scores and read the (now empty) scores into the tables.
        if (JOptionPane.showConfirmDialog(null, "Are you sure you want to reset the score file?", "Reset scores",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
            scoreHandler.resetScores();
            readScores();
        }
    }//GEN-LAST:event_jButtonResetActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Metal look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HighScoreFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HighScoreFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HighScoreFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HighScoreFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HighScoreFrame(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBack;
    private javax.swing.JButton jButtonReset;
    private javax.swing.JPanel jPanelEasy;
    private javax.swing.JPanel jPanelExpert;
    private javax.swing.JPanel jPanelMedium;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPaneScores;
    private javax.swing.JTable jTableEasy;
    private javax.swing.JTable jTableExpert;
    private javax.swing.JTable jTableMedium;
    // End of variables declaration//GEN-END:variables

    private ScoreHandler scoreHandler;

}
